# This workflow will install Python dependencies, run tests and lint
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# To ssh into this build add the following:
#- name: Start SSH session
#      uses: luchihoratiu/debug-via-ssh@main
#      with:
#        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
#        SSH_PASS: ${{ secrets.SSH_PASS }}

name: Execution Engine 2 Test Suite

on:
  [ pull_request ]

jobs:
  Lint_with_Black:
    runs-on: ubuntu-latest
    name: Lint With Black
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./lib"
          version: "22.10.0"
      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./test"
          version: "22.10.0"

  Lint_with_Flake8:
    runs-on: ubuntu-latest
    name: Lint With Flake8
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.14"
      - name: flake8 Lint Lib
        uses: py-actions/flake8@v2
        with:
          path: "./lib"
      - name: flake8 Lint Test
        uses: py-actions/flake8@v2
        with:
          path: "./test"


  Build_and_Run_Tests_and_CodeCov:
    name: Build and Run Tests and CodeCov
    runs-on: ubuntu-latest
    steps:
      - name: Check out source repository
        uses: actions/checkout@v4
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.14"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          git clone https://github.com/kbase/jars /opt/jars
      - name: Give MongoDB a chance to startup
        run: |
          docker-compose up -d mongodb
      - name: Build Docker Image
        run: |
          docker build . -t execution_engine2:test
      - name: Run Tests
        run: |
          docker-compose up -d
          curl localhost:27017 | grep "It looks like you are trying to access MongoDB over HTTP on the native driver port." || exit 1
          cp test/env/test.travis.env test.env
          make test-coverage
          codecov
