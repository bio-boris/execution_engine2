# This workflow will install Python dependencies, run tests and lint
name: Execution Engine 2 Test Suite

on:
  [ pull_request ]

jobs:
  Lint_with_Black:
    runs-on: ubuntu-latest
    name: Lint With Black
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./lib"
          version: "22.10.0"
      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./test"
          version: "22.10.0"

  Lint_with_Flake8:
    runs-on: ubuntu-latest
    name: Lint With Flake8
    steps:
      - name: Check out source repository
        uses: actions/checkout@v4
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.14"
      - name: flake8 Lint Lib
        uses: py-actions/flake8@v2
        with:
          path: "./lib"
      - name: flake8 Lint Test
        uses: py-actions/flake8@v2
        with:
          path: "./test"

  Build_and_Run_Tests_and_CodeCov:
    name: Build and Run Tests and CodeCov
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongo-config:
          - "7.0"
          - "3.6"
        init-path:
          - "./test/dockerfiles/mongo/docker-entrypoint-initdb.d-7.0/"
          - "./test/dockerfiles/mongo/docker-entrypoint-initdb.d-3.6/"
    steps:
      - name: Check out source repository
        uses: actions/checkout@v4
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.14"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          git clone https://github.com/kbase/jars /opt/jars
      - name: Set MongoDB Version and Init Path
        run: |
          echo "MONGO_VERSION=${{ matrix.mongo-config.version }}" >> $GITHUB_ENV
          echo "INIT_PATH=${{ matrix.mongo-config.init-path }}" >> $GITHUB_ENV
      - name: Start Services and Run Tests
        run: |
          docker compose up -d
          cp test/env/test.travis.env test.env
          make test-coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Cleanup
        run: |
          docker compose down
